1 - install modules: express, nodemon, mongoose, dotenv
2 - replace the content in your dotenv file with real content
3 - run index.js, this is now your server file.

Phase 2:
Creating a model file for the Book Collection
- This is going to be a schematic/blueprint of what you are accessing for the Collection. This includes structuring our data so we know what we send to the Database

1 - Create a file called book.js inside the Model folder
    1.1 - We are essentially making a template document for what we will fill into the server - Something like Class Object Student from Java, or a Class file in Python
    1.2 - We will include all keys from our Collection

Here is the base file:

//----------------------------------- File Here -------------------------
const mongoose = require('mongoose');

// Define the schema
const templateSchema = new mongoose.Schema({ "ADD THINGS HERE "});

// Create the model
const Template = mongoose.model('Template', templateSchema);

module.exports = Template;


// ------------ Example fields

  fieldName1: {
    type: String, // Example: 'Post Title'
    required: true, // Indicates this field is mandatory
    trim: true // Removes whitespace from both ends
  },
  fieldName2: {
    type: Number, // Example: 42 (could be an age, count, etc.)
    required: false // Optional field
  },
  fieldName3: {
    type: Boolean, // Example: true (could indicate status, published or not)
    default: false // Default value if not provided
  },
  fieldName4: {
    type: Date, // Example: new Date('2023-01-01')
    default: Date.now // Sets current date as default
  },
  fieldName5: [{
    type: String, // Example: ['tag1', 'tag2', 'tag3']
    trim: true // Clean up whitespace
  }],
  fieldName6: [{
    user: {
      type: mongoose.Schema.Types.ObjectId,
      ref: 'User', // Reference to another collection (e.g., User)
      required: true // Mandatory field
    },
    comment: {
      type: String, // Example: 'Great post!'
      required: true // Mandatory field
    },
    createdAt: {
      type: Date,
      default: Date.now // Automatically set to the current date
    }
  }]